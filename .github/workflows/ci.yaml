name: CI Pipeline

on:
    push:
        branches:
            - master
    pull_request:
        branches:
            - master

jobs:
    test:
        runs-on: ubuntu-latest
        environment: test
        steps:
            - name: Checkout code
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: '22'

            - name: Install dependencies
              run: npm ci
            - name: Install SonarScanner
              run: npm install -g sonarqube-scanner

            - name: Run SonarQube Scan
              run: npx sonarqube-scanner
              env:
                  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

            - name: Run eslint
              run: npm run lint:eslint

            - name: Run prettier
              run: npm run format:check

            - name: Run stylelint
              run: npm run lint:stylelint

            - name: Run test coverage
              run: npm run test:coverage
              env:
                  PORT: ${{ secrets.PORT }}
                  VITE_ENV: ${{ vars.VITE_ENV }}
                  SETUP_SCRIPT_RAN: ${{ vars.SETUP_SCRIPT_RAN }}
                  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
                  VITE_CONVEX_URL: ${{ secrets.VITE_CONVEX_URL }}
                  CONVEX_DEPLOYMENT: ${{ secrets.CONVEX_DEPLOYMENT }}
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    production:
        if: github.event_name == 'push'
        needs: test
        runs-on: ubuntu-latest
        environment: production
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: '22'

            - name: Install dependencies
              run: npm ci

            - name: Build the application
              run: npm run build
              env:
                  PORT: ${{ secrets.PORT }}
                  VITE_ENV: ${{ vars.VITE_ENV }}
                  SETUP_SCRIPT_RAN: ${{ vars.SETUP_SCRIPT_RAN }}
                  SENTRY_TOKEN: ${{ secrets.SENTRY_TOKEN }}
                  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
                  VITE_CONVEX_URL: ${{ secrets.VITE_CONVEX_URL }}
                  CONVEX_DEPLOYMENT: ${{ secrets.CONVEX_DEPLOYMENT }}
            - name: Upload build artifacts
              uses: actions/upload-artifact@v4
              with:
                  name: dist
                  path: dist
